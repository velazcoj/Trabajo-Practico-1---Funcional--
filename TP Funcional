-- 1)
data Viajero = Viajero String Int [Recuerdo] [Viaje] deriving (Show,Eq)
data Viaje = Pasado String [String] [Recuerdo] Int | Futuro String [String] Int Int deriving (Show,Eq)
data Recuerdo = Recuerdo String String deriving (Show,Eq)

--Se pide:
--1. Definir las funciones que permitan obtener:
--a. Dado un viajero su nombre,
--b. Dado un viaje, su nombre
--c. Dado un recuerdo, su nombre y el lugar de donde proviene

nombreViajero(Viajero nombre _ _ _) = nombre

nombreLugarViaje(Pasado nombre _ _ _) = nombre
nombreLugarViaje(Futuro nombre _ _ _) = nombre

nombreYLugarRecuerdo (Recuerdo nombre lugar) = (nombre,lugar)

--2. Definir una función que permita obtener los recuerdos y los viajes de un viajero.
recuerdosYViajes(Viajero _ _ recuerdos viajes) = (recuerdos,viajes)

--3. Hacer una función que permita saber si un viaje es interesante. Un viaje es interesante si:
--a. Si el destino del viaje es el lejano oeste
--b. Si es un viaje al pasado y el viajero se puede traer más de 5 recuerdos
--c. Todos los viajes al futuro son interesantes.
esInteresante (Pasado _ recuerdos _ _) = length recuerdos > 5
esInteresante (Pasado nombre _ _ _) = nombre == "Lejano Oeste"
esInteresante (Futuro _ _ _ _) = True

--4. Hacer una función que dada una lista de viajes, permita mostrar los nombres y los años de todos los viajes que son interesantes.
nombresYAniosDeViajesInteresantes listaViajes = [(obtenerAnioViaje x, nombreLugarViaje x)  | x <- listaViajes, esInteresante x]

obtenerAnioViaje (Pasado _ _ _ anio) = anio
obtenerAnioViaje (Futuro _ _ _ anio) = anio

--5. Hacer una función que dada una lista de viajes, un año inicio y un año fin, se pueda obtener cuáles son los nombres y el año de todos los viajes entre dos años que están en el rango pasado por parámetro.
viajesEntreAnios [] anioInicio anioFin = []
viajesEntreAnios (viaje:restoViajes) anioInicio anioFin | anioInicio > anioFin = viajesEntreAnios (viaje:restoViajes) anioFin anioInicio
                                                        | obtenerAnioViaje viaje >= anioInicio && obtenerAnioViaje viaje <= anioFin = (nombreLugarViaje viaje, obtenerAnioViaje viaje) : viajesEntreAnios restoViajes anioInicio anioFin
                                                        | otherwise = viajesEntreAnios restoViajes anioInicio anioFin

recuerdoBaile = Recuerdo "Baile del encanto bajo el oceano" "Escuela Secundaria"
recuerdoPersecucion = Recuerdo "Persecucion con Biff" "Autopista"
recuerdoTiburon = Recuerdo "Holograma de Jaws 19" "Plaza"

viajePasado = Pasado "Marte" [] [] 1950
viajeFuturo = Futuro "Luna" [] 300 2010
viajeAChina = Futuro "China" [] 100 1985
--primerViaje = Viaje "Hill Valley" False 1955 [recuerdoBaile,recuerdoPersecucion]
--viajeFuturo = Viaje "Hill Valley" True 2015 [recuerdoTiburon]
--viajeOeste = Viaje "Lejano Oeste" False 1885 []

marty = Viajero "Marty McFly" 17 [recuerdoBaile,recuerdoPersecucion,recuerdoTiburon] [viajePasado,viajeFuturo,viajeAChina]
doc = Viajero "Dr Emmet Brown" 65 [] [viajePasado,viajeFuturo,viajeAChina]




